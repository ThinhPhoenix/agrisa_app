workflows:
  # Android Workflow
  react-native-android:
    name: React Native Android (Bun)
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      groups:
        - expo_url
      vars:
        EXPO_PROJECT_SLUG: "agrisa"
      node: 18
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install Bun v√† dependencies
        script: |
          curl -fsSL https://bun.sh/install | bash
          source ~/.bashrc || true
          export PATH="$HOME/.bun/bin:$PATH"
          
          which bun && bun --version
          bun install
          bun add -g @expo/cli
      
      - name: Setup Environment Variables
        script: |
          if [ -z "$EXPO_PUBLIC_API_URL" ]; then
            echo "‚ùå ERROR: EXPO_PUBLIC_API_URL is not set!"
            echo "Please check Codemagic environment group 'expo_url'"
            exit 1
          fi
          
          echo "‚úÖ Environment variables loaded:"
          echo "EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL"
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
      
      - name: Expo Prebuild for Android
        script: |
          export PATH="$HOME/.bun/bin:$PATH"
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          
          rm -rf android
          bunx expo prebuild --platform android
          
          if grep -r "EXPO_PUBLIC_API_URL" android/; then
            echo "‚úÖ API URL has been embedded in Android build"
          else
            echo "‚ö†Ô∏è Warning: API URL might not be embedded"
          fi
      
      - name: Set up debug.keystore for Android
        script: |
          rm -f ~/.android/debug.keystore
          keytool -genkeypair -alias androiddebugkey -keypass android \
            -keystore ~/.android/debug.keystore -storepass android \
            -dname 'CN=Android Debug,O=Android,C=US' -keyalg 'RSA' \
            -keysize 2048 -validity 10000
      
      - name: Build Android APK
        script: |
          cd android
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          ./gradlew assembleRelease
    
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
    
    publishing:
      email:
        recipients:
          - nhancd909@gmail.com
          - hgiap46@gmail.com
        notify:
          success: true
          failure: false

  # iOS Simulator Workflow
  react-native-ios-simulator:
    name: React Native iOS Simulator (Bun)
    instance_type: mac_mini_m1
    max_build_duration: 90
    environment:
      groups:
        - expo_url
      vars:
        BUNDLE_ID: "com.tnhaan.agrisa"
        EXPO_PROJECT_SLUG: "agrisa"
      node: 18
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install Bun v√† dependencies
        script: |
          curl -fsSL https://bun.sh/install | bash
          source ~/.bashrc || true
          export PATH="$HOME/.bun/bin:$PATH"
          
          which bun && bun --version
          bun install
          bun add -g @expo/cli
      
      - name: Setup Environment Variables
        script: |
          if [ -z "$EXPO_PUBLIC_API_URL" ]; then
            echo "‚ùå ERROR: EXPO_PUBLIC_API_URL is not set!"
            exit 1
          fi
          
          echo "‚úÖ EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL"
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
      
      - name: Expo Prebuild for iOS
        script: |
          export PATH="$HOME/.bun/bin:$PATH"
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          
          rm -rf ios
          bunx expo prebuild --platform ios
      
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      
      - name: Debug - List Xcode Workspace Info
        script: |
          echo "üìã Listing Xcode workspace schemes..."
          xcodebuild -workspace ios/Agrisa.xcworkspace -list || {
            echo "‚ö†Ô∏è Warning: Could not list schemes"
            echo "Checking for workspace file..."
            ls -la ios/*.xcworkspace/
          }
      
      - name: Build iOS for Simulator
        script: |
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          
          echo "üî® Building iOS for Simulator..."
          xcodebuild \
            -workspace ios/Agrisa.xcworkspace \
            -scheme Agrisa \
            -configuration Release \
            -destination "generic/platform=iOS Simulator" \
            -derivedDataPath $CM_BUILD_DIR/build \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            build
      
      - name: Copy Simulator Build
        script: |
          mkdir -p $CM_BUILD_DIR/simulator_build
          
          echo "üì¶ Looking for built .app file..."
          find $CM_BUILD_DIR/build -name "*.app" -type d
          
          if [ -d "$CM_BUILD_DIR/build/Build/Products/Release-iphonesimulator/Agrisa.app" ]; then
            cp -R $CM_BUILD_DIR/build/Build/Products/Release-iphonesimulator/Agrisa.app \
              $CM_BUILD_DIR/simulator_build/
            echo "‚úÖ iOS Simulator build copied successfully"
          else
            echo "‚ùå Agrisa.app not found at expected location"
            echo "Searching for any .app files..."
            find $CM_BUILD_DIR/build -name "*.app" -type d
          fi
    
    artifacts:
      - simulator_build/Agrisa.app
      - build/Build/Products/Release-iphonesimulator/**/*
    
    publishing:
      email:
        recipients:
          - nhancd909@gmail.com
          - hgiap46@gmail.com
        notify:
          success: true
          failure: true
