workflows:
  # Android Workflow - Chỉ dùng Bun (Đã sửa lỗi --clear)
  react-native-android:
    name: React Native Android (Bun)
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      groups:
        - expo_url  # ✅ Chứa EXPO_PUBLIC_API_URL
      vars:
        EXPO_PROJECT_SLUG: "agrisa"
      node: 18
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install Bun và dependencies
        script: |
          curl -fsSL https://bun.sh/install | bash
          source ~/.bashrc || true
          export PATH="$HOME/.bun/bin:$PATH"
          
          which bun && bun --version
          bun install
          bun add -g @expo/cli
      
      # ✅ MỚI: Setup environment variables TRƯỚC khi prebuild
      - name: Setup Environment Variables
        script: |
          # Verify biến môi trường đã được load từ Codemagic
          if [ -z "$EXPO_PUBLIC_API_URL" ]; then
            echo "❌ ERROR: EXPO_PUBLIC_API_URL is not set!"
            echo "Please check Codemagic environment group 'expo_url'"
            exit 1
          fi
          
          echo "✅ Environment variables loaded:"
          echo "EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL"
          
          # Export để Expo có thể đọc được
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
      
      - name: Expo Prebuild for Android
        script: |
          export PATH="$HOME/.bun/bin:$PATH"
          
          # ✅ Export lại environment variables
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          
          # Xóa thư mục android cũ
          rm -rf android
          
          # Prebuild - app.config.js sẽ đọc process.env.EXPO_PUBLIC_API_URL
          bunx expo prebuild --platform android
          
          # Verify API URL đã được bake vào build
          if grep -r "EXPO_PUBLIC_API_URL" android/; then
            echo "✅ API URL has been embedded in Android build"
          else
            echo "⚠️ Warning: API URL might not be embedded"
          fi
      
      - name: Set up debug.keystore for Android
        script: |
          rm -f ~/.android/debug.keystore
          keytool -genkeypair -alias androiddebugkey -keypass android \
            -keystore ~/.android/debug.keystore -storepass android \
            -dname 'CN=Android Debug,O=Android,C=US' -keyalg 'RSA' \
            -keysize 2048 -validity 10000
      
      - name: Build Android APK
        script: |
          cd android
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          ./gradlew assembleRelease
    
    artifacts:
      - android/app/build/outputs/**/*.apk
      - android/app/build/outputs/**/*.aab
    
    publishing:
      email:
        recipients:
          - nhancd909@gmail.com
          - hgiap46@gmail.com
        notify:
          success: true
          failure: false

  # iOS Simulator Workflow - Không cần Apple Developer Account  
  react-native-ios-simulator:
    name: React Native iOS Simulator (Bun)
    instance_type: mac_mini_m1
    max_build_duration: 90
    environment:
      groups:
        - expo_url
      vars:
        BUNDLE_ID: "com.tnhaan.agrisa"
        EXPO_PROJECT_SLUG: "agrisa"
      node: 18
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Install Bun và dependencies
        script: |
          curl -fsSL https://bun.sh/install | bash
          source ~/.bashrc || true
          export PATH="$HOME/.bun/bin:$PATH"
          
          which bun && bun --version
          bun install
          bun add -g @expo/cli
      
      - name: Setup Environment Variables
        script: |
          if [ -z "$EXPO_PUBLIC_API_URL" ]; then
            echo "❌ ERROR: EXPO_PUBLIC_API_URL is not set!"
            exit 1
          fi
          
          echo "✅ EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL"
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
      
      - name: Expo Prebuild for iOS
        script: |
          export PATH="$HOME/.bun/bin:$PATH"
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          
          rm -rf ios
          bunx expo prebuild --platform ios
      
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      
      - name: Build iOS for Simulator
        script: |
          export EXPO_PUBLIC_API_URL=$EXPO_PUBLIC_API_URL
          
          xcodebuild -workspace ios/agrisa.xcworkspace \
            -scheme agrisa \
            -configuration Release \
            -destination "generic/platform=iOS Simulator" \
            -derivedDataPath $CM_BUILD_DIR/build \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            build
      
      - name: Copy Simulator Build
        script: |
          mkdir -p $CM_BUILD_DIR/simulator_build
          if [ -d "$CM_BUILD_DIR/build/Build/Products/Release-iphonesimulator/agrisa.app" ]; then
            cp -R $CM_BUILD_DIR/build/Build/Products/Release-iphonesimulator/agrisa.app \
              $CM_BUILD_DIR/simulator_build/
            echo "✅ iOS Simulator build successful"
          else
            echo "❌ iOS Simulator build not found"
            find $CM_BUILD_DIR/build -name "*.app" -type d
          fi
    
    artifacts:
      - simulator_build/agrisa.app
      - build/Build/Products/Release-iphonesimulator/**/*
    
    publishing:
      email:
        recipients:
          - nhancd909@gmail.com
          - hgiap46@gmail.com
        notify:
          success: true
          failure: true
